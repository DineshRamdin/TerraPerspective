@{
    ViewData["Title"] = "Task";
}
@using UI.Resources
@using BL.Models.Administration;
@model TaskCRUDDTO;
<link href="~/plugins/dropdowntree/dropdowntree.css" rel="stylesheet" />

<style>
    label {
        margin-bottom: 0; /* Prevents extra spacing under the label */
    }

    input[type="checkbox"] {
        margin: 0; /* Removes any unwanted margin */
    }


    /* Ensure checkboxes inside the dropdown are visible */
    .checkbox {
        margin-right: 10px;
        display: inline-block;
    }

    /* Style for the dropdown items */
    .dropdown-item {
        display: flex;
        align-items: center;
        padding: 5px;
    }

        .dropdown-item label {
            cursor: pointer;
        }
    /* Separator after the first item */
    .dropdown-menu li:not(:first-child) {
        border-top: 1px solid #e0e0e0; /* Light gray separator */
        margin-top: 5px;
    }
</style>

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">@SharedResource.Task</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-area="" asp-controller="Dashboard" asp-action="index">@SharedResource.Home</a></li>
                    <li class="breadcrumb-item active">@SharedResource.Task</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<section class="content">
    <div class="container-fluid">
        <div class="card card-solid">
            <div class="card-body pb-0">
                <div class="row">
                    <div class="col-10">
                    </div>
                </div>
                <div class="form-panel" id="formTaskAddEdit">
                    <div class="row">
                        @* Hidden field for Task ID *@
                        <div class="form-floating d-none">
                            @Html.TextBoxFor(m => m.Id, new { @class = "form-control", @result = "Id", @id = "hdnId", @type = "text", @placeholder = "Id" })
                        </div>

                        <div class="col-3 form-group">
                            <label>@SharedResource.Task_Code<span class="red-required">*</span></label>
                            @Html.TextBoxFor(m => m.UserCode, new { @class = "form-control", @result = "UserCode", @placeholder = SharedResource.Task_Code, @readonly = "readonly" })
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Task_Name<span class="red-required">*</span></label>
                            @Html.TextBoxFor(m => m.TaskName, new { @class = "form-control", @result = "TaskName", @placeholder = SharedResource.Task_Name, @required = "required" })
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Parent_Task<span class="red-required">*</span></label>
                            <select class="form-control" id="ddlParentTask" required></select>
                        </div>

                        <div class="col-3 form-group">
                            <label>@SharedResource.Projects<span class="red-required">*</span></label>
                            <select class="form-control" id="ddlProjects" required></select>
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Status<span class="red-required">*</span></label>
                            <select class="form-control" id="ddlStatus" required></select>
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Percentage<span class="red-required">*</span></label>
                            @Html.TextBoxFor(m => m.Percentage, new { @class = "form-control", @result = "Percentage", @min = "0", @max = "100", @placeholder = SharedResource.Percentage, @required = "required" })
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Start_Date<span class="red-required">*</span></label>
                            @Html.TextBoxFor(m => m.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @result = "StartDate", @type = "date", @placeholder = SharedResource.Start_Date, @required = "required" })
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.End_Date<span class="red-required">*</span></label>
                            @Html.TextBoxFor(m => m.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @result = "EndDate", @type = "date", @placeholder = SharedResource.End_Date, @required = "required" })
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Task_Description<span class="red-required">*</span></label>
                            @Html.TextAreaFor(m => m.TaskDescription, new { @class = "form-control", @result = "TaskDescription", @placeholder = SharedResource.Task_Description, @required = "required" })
                        </div>
                        <div class="col-3 form-group">
                            <label>@SharedResource.Folder<span class="red-required">*</span></label>
                            @if (Model.Folder == null)
                            {
                                @Html.TextBoxFor(m => m.Folder, new { @class = "form-control", @type = "text", @id = "txtFolder", @required = "required", @name = "txtFolder", @result = "Folder" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Folder, new { @class = "form-control", @type = "text", @result = "Folder", @readonly = "readonly" })
                            }
                        </div>

                        <div class="col-4 row form-group clearfix">
                            <div class="col-4 d-flex align-items-center">
                                <label for="chbIsVisible" class="mr-2">@SharedResource.Is_Visible</label>
                                @Html.CheckBoxFor(m => m.IsVisible.HasValue, new { @class = "form-control-sm", @result = "IsVisible" })

                            </div>
                        </div>
                    </div>
                    @if (Model.Folder != null)
                    {
                        <div class="row">
                            <div class="col-md-3">
                                <table id="folderList" class="table table-bordered table-striped">
                                    <thead style="background: #d5e8ff;">
                                        <tr>
                                            <th>File Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    }
                    <div class="row mb-2"></div>
                    <div class="row">
                        <div class="col-3 mb-2">
                            <button type="button" class="btn btn-primary mr-2" onclick="SaveTask();">@SharedResource.Save</button>
                            <a href="@Url.Action("Index","Task")" type="button" class="btn btn-default">Back To List</a>
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>
</section>
@section scripts
    {
    <script src="~/plugins/dropdowntree/dropdowntree.js"></script>
    <script>
        var GetAllTaskUrl = '@Url.Action("GetAll", "Task")';
        var TaskGetByIdUrl = '@Url.Action("GetById", "Task")';
        var CreateUpdateTaskUrl = '@Url.Action("CreateUpdate", "Task")';
        var getTaskDropDownUrl = '@Url.Action("GetAllDropdownValues", "Task")';

        var Project = '@Model.Project';
        var ParentTask = '@Model.ParentTask';
        var Status = '@Model.Status';
        var TaskId = '@Model.Id';
        var data = @Html.Raw(Json.Serialize(Model.Files));

        $(function () {
            $('.nav-link').removeClass('active');
            $('#liTaskmenu').addClass('active');

            if ($('#StartDate').val() === '0001-01-01') {
                $('#StartDate').val('');
            }

            if ($('#EndDate').val() === '0001-01-01') {
                $('#EndDate').val('');
            }

            GetDropdownData();

            if (TaskId > 0) {
                ShowFiles();
            }
        });

        function GetDropdownData() {
            $.ajax({
                url: getTaskDropDownUrl,
                type: "POST",
                async: false,
                // data: dataObject,  // Send data if needed
                beforeSend: function () {
                    $("#ddlProjects").html('');
                    $("#ddlStatus").html('');
                    $("#ddlParentTask").html('');
                },
                success: function (response) {
                    if (response.data) {
                        $.each(response.data, function (key, value) {
                            if (value.title == "Projects") {
                                $("#ddlProjects").append($("<option></option>").val('').html("@SharedResource.Select_Project"));
                                $.each(value.items, function (itemskey, itemsvalue) {
                                    $("#ddlProjects").append($("<option></option>").val(itemsvalue.id).html(itemsvalue.text));
                                });
                                if (Project != null)
                                    $("#ddlProjects").val(Project);
                            }

                            if (value.title == "Project Status") {
                                $("#ddlStatus").append($("<option></option>").val('').html("@SharedResource.Select_Status"));
                                $.each(value.items, function (itemskey, itemsvalue) {
                                    $("#ddlStatus").append($("<option></option>").val(itemsvalue.id).html(itemsvalue.text));
                                });
                                if (Status != null)
                                    $("#ddlStatus").val(Status);
                            }

                            if (value.title == "ParentTask") {
                                $("#ddlParentTask").append($("<option></option>").val('').html("@SharedResource.Select_Parent_Task"));
                                $.each(value.items, function (itemskey, itemsvalue) {
                                    $("#ddlParentTask").append($("<option></option>").val(itemsvalue.id).html(itemsvalue.text));
                                });
                                if (ParentTask != null)
                                    $("#ddlParentTask").val(ParentTask);
                            }
                        });
                    }
                },
                error: function (error) {
                    console.log("Error:", error);
                    // toastr.error("Error:" + error);
                }

            });
        }


        function ShowFiles() {

            // Reference the folder list DOM element
            var folderList = $('#folderList tbody');
            folderList.empty();

            if (data.length > 0) {
                data.forEach(file => {
                    folderList.append(`<tr><td>${file}</td></tr>`);
                });
            } else {
                folderList.append(`<tr><td colspan="1">No Files</td></tr>`);
            }

        }

        function SaveTask() {

            $('.error').remove();

            // Validate required fields
            var isValid = true;

            // Check required fields
            $('#formTaskAddEdit input, #formTaskAddEdit select, #formTaskAddEdit textarea').each(function () {
                var field = $(this);
                if (field.prop('required') && !field.val()) {
                    isValid = false;
                    field.after('<span class="error" style="color: red;">@SharedResource.This_field_is_required_</span>');
                }
            });

            // Validate percentage
            var percentage = $('#Percentage').val();
            if (percentage < 0 || percentage > 100) {
                isValid = false;
                $('#Percentage').after('<span class="error" style="color: red;">@SharedResource.Percentage_must_be_between_0_and_100.</span>');
            }

            // Validate date fields
            var startDate = $('#StartDate').val();
            var endDate = $('#EndDate').val();

            if (startDate && !isValidDate(startDate)) {
                isValid = false;
                $('#StartDate').after('<span class="error" style="color: red;">@SharedResource.Invalid_start_date.</span>');
            }

            if (endDate && !isValidDate(endDate)) {
                isValid = false;
                $('#EndDate').after('<span class="error" style="color: red;">@SharedResource.Invalid_end_date.</span>');
            }

            // Check if end date is greater than or equal to start date
            if (startDate && endDate && new Date(endDate) < new Date(startDate)) {
                isValid = false;
                $('#EndDate').after('<span class="error" style="color: red;">@SharedResource.End_date_must_be_greater_than_or_equal_to_start_date.</span>');
            }

            if (!isValid) {
                toastr.error("@SharedResource.Please_fill_in_required_field_s_");
                return; // Prevent form submission if validation fails
            }

            var projectDropdown = $("#ddlProjects");
            var dataObject = {};
            var data = result(document.getElementById("formTaskAddEdit"));
            data["Project"] = $("#ddlProjects").val();
            data["ParentTask"] = $("#ddlParentTask").val();
            data["Status"] = $("#ddlStatus").val();
            data["ProjectText"] = projectDropdown.find("option:selected").text();

            $.ajax({
                url: CreateUpdateTaskUrl,
                type: "POST",
                data: data,  // Send data if needed
                beforeSend: function () {

                },
                success: function (response) {
                    if (response.data) {
                        toastr.success(response.errorMessage);
                        $('#AddTaskModal').modal('hide');
                        //location.reload();
                    }
                    else {
                        toastr.error(response.errorMessage);
                    }
                    // Handle success (e.g., update UI with response data)
                },
                error: function (error) {
                    console.log("Error:", error);
                    toastr.error("Error:" + error);
                }
            }).done(function () {

            });

        }
        function isValidDate(dateString) {
            var regex = /^\d{4}-\d{2}-\d{2}$/; // Format YYYY-MM-DD
            return dateString.match(regex) !== null;
        }

        $('#Percentage').on('input', function () {
            var value = $(this).val();
            // Remove non-numeric characters (except for the decimal point)
            $(this).val(value.replace(/[^0-9]/g, ''));

            // Limit input to 3 digits (up to 100)
            if ($(this).val() > 100) {
                $(this).val(100);
            }
        });

    </script>
}