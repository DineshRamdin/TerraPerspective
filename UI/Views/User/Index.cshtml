@{
	ViewData["Title"] = "User";
}
@using UI.Resources

<link href="~/plugins/dropdowntree/dropdowntree.css" rel="stylesheet" />

<style>
	/* Ensure checkboxes inside the dropdown are visible */
	.checkbox {
		margin-right: 10px;
		display: inline-block;
	}

	/* Style for the dropdown items */
	.dropdown-item {
		display: flex;
		align-items: center;
		padding: 5px;
	}

		.dropdown-item label {
			cursor: pointer;
		}

</style>

<!-- Content Header (Page header) -->
<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">@SharedResource.User</h1>
			</div><!-- /.col -->
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item"><a asp-area="" asp-controller="Dashboard" asp-action="index">@SharedResource.Home</a></li>
					<li class="breadcrumb-item active">@SharedResource.User</li>
				</ol>
			</div><!-- /.col -->
		</div><!-- /.row -->
	</div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->

<section class="content">
	<div class="container-fluid">
		<div class="card card-solid">
			<div class="card-body pb-0">
				<div class="row">
					<div class="col-10">
					</div>
					@*  <div class="col-2">
                        <button type="button" class="btn btn-block btn-primary mb-3" onclick="openUserModal()">Add</button>
                    </div> *@

				</div>
				<div class="row">
					<div class="col-12  mb-10">
						<table id="UserTable" class="table table-bordered table-striped dataTable dtr-inline"></table>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<div class="modal fade" id="AddUserModal" aria-hidden="true" data-backdrop="static" data-keyboard="false">
	<partial name="_AddUser.cshtml" />
</div>
<!-- /.modal -->
@section scripts
{
	<script src="~/plugins/dropdowntree/dropdowntree.js"></script>
	<script>
		var GetAllUserUrl = '@Url.Action("GetAll", "User")';
		var UserGetByIdUrl = '@Url.Action("GetById", "User")';
		var getUserDropDownUrl = '@Url.Action("getUserDropDown", "User")';
		var CreateUpdateUserUrl = '@Url.Action("CreateUpdate", "User")';
		var ResetUserPasswordUrl = '@Url.Action("ResetUserPassword", "User")';
		var UserPreviewUrl = '@Url.Action("Preview", "User")';
		var UserMatrix = '@Url.Action("GetTreeDropDown", "User")';

		$(function () {
			$('.nav-link').removeClass('active');
			$('#liusermenu').addClass('active');

			GetAllUser();

			$('#UserTreeDropdown').on('change', function () {
				// Assuming the plugin has a method to get selected values
				var selectedValues = $(this).DropdownTree('getSelectedValues'); // Adjust based on the actual method
				console.log('Selected Values: ', selectedValues);
			});
		});

		function GetAllUser() {

			var columnList = [
				{ data: 'id', title: 'Id', visible: false },
				//{ data: 'surname', title: 'Surname' },
				{ data: 'surname', title: '@SharedResource.Surname'},
				{ data: 'othername', title: '@SharedResource.Othername' },
				{ data: 'email', title: '@SharedResource.Email' },
				{ data: 'roleName', title: '@SharedResource.Role_Name' },
				{
					data: 'profileImagebase64',
					title: '@SharedResource.Profile_Image',
					render: function (data, type, row, meta) {
						// Check if the data (base64 string) is valid
						if (data && data.trim() !== "") {
							// Render the base64 image in an <img> tag
							return '<img src="data:image/png;base64,' + data + '" alt="@SharedResource.System_Icon" style="width: 35px; height: 35px;" />';
						} else {
							// If no valid base64 string, return a placeholder or empty image
							return '<img src="" />';
						}
					}
				},
			];

			var langResource = {
				AddNewLabel: '@SharedResource.Add_New',
				ExportLabel: '@SharedResource.Export',
				ExportPDFLabel:'@SharedResource.Export_PDF',
				ExportCSVLabel:'@SharedResource.Export_CSV',
				ExportExcelLabel:'@SharedResource.Export_Excel',
				ExcelLabel:'@SharedResource.Excel',
				PDFLabel:'@SharedResource.PDF',
				CSVLabel:'@SharedResource.CSV',
				NodataavailableLabel :'@SharedResource.No_data_available',
				SearchLabel :'@SharedResource.Search',
				ShowingLabel :'@SharedResource.Showing',
				EntriesLabel :'@SharedResource.entries',
				FilteredfromLabel :'@SharedResource.filtered_from',
				ViewLabel :'@SharedResource.View',
				PreviewLabel :'@SharedResource.Preview',
				DeleteLabel :'@SharedResource.Delete',
				EditLabel :'@SharedResource.Edit',
				ResetPasswordLabel :'@SharedResource.Reset_Password',
				UserNameLabel :'@SharedResource.UserName',
				DateLabel :'@SharedResource.Date',
				PageLabel :'@SharedResource.Page',
				OfLabel :'@SharedResource.of',
				GeneratedonLabel :'@SharedResource.Generated_on',
				PreviousLabel :'@SharedResource.Previous',
				NextLabel :'@SharedResource.Next',
			};


			initializeDataGrid('UserTable', 'openUserModal', GetAllUserUrl, columnList, false,true,true,true,true,'PreviewUserModal',true,null,langResource);

		}

		 function PreviewUserModal(id) {
			window.open(UserPreviewUrl + "?id=" + id, '_blank');
		}

		function openUserModal(id) {
			var options;
			var dataObject = {};
			dataObject.id = id;

			$.ajax({
				url: UserGetByIdUrl,
				type: "POST",
				data: dataObject,  // Send data if needed
				beforeSend: function () {
					ClearUserModal();
					GetDropdownData();
				},
				success: function (response) {
					if (response.data) {
						if (response.data.id != undefined && response.data.id != null && response.data.id != "")
							$("#h4UserTitle").html("@SharedResource.Modify_User");
						else {
							$("#h4UserTitle").html("@SharedResource.Add_User");
						}

						$("#hdnuserId").val(response.data.id);
						$("#txtSurname").val(response.data.surname);
						$("#txtOthername").val(response.data.othername);
						$("#txtEmail").val(response.data.email);
						$("#txtMobile").val(response.data.phoneNumber);
						$("#ddlRole").val(response.data.role);
						if (response.data.profileImagebase64 != null && response.data.profileImagebase64 != "") {
							$("#oldprofileimage").val(response.data.profileImagebase64);

							$("#viewProfileImage").attr("src", "data:image/png;base64," + response.data.profileImagebase64);
							$("#viewProfileImage").css("display", "");

						}
						// Fetch data from the server and initialize the tree
						$.ajax({
							url: UserMatrix, // API endpoint to fetch the matrix data
							type: "POST",
							data: dataObject,  // Send data if needed
							success: function (response) {
								if (response && response.data) {
									data = response.data;
									// console.log("data : ", data);
									var options = {
										title: "@SharedResource.User_Matrix",
										data: data,
										maxHeight: 300,
										closedArrow: '<i class="fa fa-caret-right" aria-hidden="true"></i>',
										openedArrow: '<i class="fa fa-caret-down" aria-hidden="true"></i>',
										multiSelect: true,
										selectChildren: true,
									}

									$("#UserTreeDropdown").DropDownTree(options);

									//initializeTreeView(data);
								} else {
									console.error("@SharedResource.Failed_to_fetch_tree_data_");
								}
							},
							error: function () {
								console.error("@SharedResource.An_error_occurred_while_fetching_tree_data_");
							}
						});

					}
					else {
						toastr.error(response.errorMessage);
					}
					// Handle success (e.g., update UI with response data)
				},
				error: function (error) {
					console.log("Error:", error);
					toastr.error("Error:" + error);
				}
			}).done(function () {
				$('#AddUserModal').modal('show');
				$("#frnUserCreate").validate({}).resetForm();
			});


		}

		function ResetUserPassword(id){
			var dataObject = {};
			dataObject.id = id;
			$.ajax({
				url: ResetUserPasswordUrl,
				type: "POST",
				data: dataObject,  // Send data if needed
				beforeSend: function () {

				},
				success: function (response) {
					if (response.data) {
						toastr.success(response.errorMessage);
						GetAllUser();
					}
					else {
						toastr.error(response.errorMessage);
					}
					// Handle success (e.g., update UI with response data)
				},
				error: function (error) {
					console.log("Error:", error);
					toastr.error("Error:" + error);
				}
			}).done(function () {

			});
		}

		function ClearUserModal() {
			$("#h4UserTitle").html('@SharedResource.Add_User');
			$("#hdnuserId").val("");
			$("#txtSurname").val("");
			$("#txtOthername").val("");
			$("#txtEmail").val("");
			$("#txtMobile").val("");
			$("#profileimagefile").val(null);
			$("#oldprofileimage").val("");
			$("#viewProfileImage").attr("src", "");
			$("#viewProfileImage").css("display", "none");
			$('#tree').jstree("destroy").empty();
			$("#UserTreeDropdown").empty();
			// Unbind all event listeners attached to the element
			$("#UserTreeDropdown").off();

			// Remove data associated with the element (if any)
			$("#UserTreeDropdown").removeData();
		}

		function GetDropdownData() {
			$.ajax({
				url: getUserDropDownUrl,
				type: "POST",
				async: false,
				// data: dataObject,  // Send data if needed
				beforeSend: function () {
					$("#ddlRole").html('');
				},
				success: function (response) {
					if (response.data) {
						$.each(response.data, function (key, value) {
							if (value.title == "Roles") {
								$("#ddlRole").append($("<option></option>").val('').html('@SharedResource.Select_Role'));
								$.each(value.items, function (itemskey, itemsvalue) {
									$("#ddlRole").append($("<option></option>").val(itemsvalue.id).html(itemsvalue.text));
								});
							}
						});
					}
				},
				error: function (error) {
					console.log("Error:", error);
					// toastr.error("Error:" + error);
				}

			});
		}

		async function SaveUser() {

			let valid = formValidation(["txtSurname", "txtOthername", "txtEmail", "ddlRole", "txtMobile"]);
			//get tree selected data
			//var treeData = $('#tree').jstree(true).get_json('#', { flat: true }).filter(x => x.state.checked == true);
			var treeDropDownData = $("#UserTreeDropdown").init.prototype.GetSelected();
			
			//get tree selected ids
			var selectedIds = []
			if (treeDropDownData.length > 0) {
				selectedIds = treeDropDownData.map(function (datum) {
					return parseInt(datum);
				});
			}
			if (valid) {
				var dataObject = {};
				dataObject.id = $("#hdnuserId").val();
				dataObject.Surname = $("#txtSurname").val();
				dataObject.Othername = $("#txtOthername").val();
				dataObject.Email = $("#txtEmail").val();
				dataObject.PhoneNumber = $("#txtMobile").val();
				dataObject.Role = $("#ddlRole").val();
				dataObject.UserMatrix = selectedIds;

				var FileData = await FiletoBase64string("profileimagefile");

				if (FileData == "") {
					FileData = $('#oldprofileimage').val();
				}

				dataObject.ProfileImagebase64 = FileData;

				$.ajax({
					url: CreateUpdateUserUrl,
					type: "POST",
					data: dataObject,  // Send data if needed
					beforeSend: function () {

					},
					success: function (response) {
						if (response.data) {
							toastr.success(response.errorMessage);
							$('#AddUserModal').modal('hide');
							GetAllUser();
						}
						else {
							toastr.error(response.errorMessage);
						}
						// Handle success (e.g., update UI with response data)
					},
					error: function (error) {
						console.log("Error:", error);
						toastr.error("Error:" + error);
					}
				}).done(function () {

				});
			}
			else {
				toastr.warning('@SharedResource.Please_fill_in_required_field_s_');
			}
		}

		function initializeTreeView(treeData) {
			$('#tree').jstree({
				"core": {
					"animation": 0,
					"check_callback": true,
					"themes": { "icons": false },
					'data': treeData
				},
				"types": {
					"#": {
						"valid_children": ["root"]
					},
					"root": {
						"valid_children": ["default"]
					},
					"default": {
						"valid_children": ["default", "file"]
					},
					"file": {
						"valid_children": []
					}
				},
				"checkbox": {
					"tie_selection": false,
					"three_state": false,
				},
				"plugins": [
					"checkbox"
				]
			});
		}



	</script>
}